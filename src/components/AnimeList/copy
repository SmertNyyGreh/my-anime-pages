import React, { useState, useEffect } from 'react';
import styles from './AnimeList.module.scss';
import { Button } from '@mui/material';
import Box from '@mui/material/Box';
import InputLabel from '@mui/material/InputLabel';
import MenuItem from '@mui/material/MenuItem';
import FormControl from '@mui/material/FormControl';
import Select from '@mui/material/Select';

export const AnimeList = () => {
   const url = 'https://kitsu.io/api/edge';
   const [nameAnime, setNameAnime] = useState([]);
   const [page, setPage] = useState(0);
   const [genres, setGenres] = useState('');

   useEffect(() => {
      fetch(
         `${url}/anime?page[limit]=10&page[offset]=${page}&${
            genres && `filter[genres]=${genres}`
         }`,
         {
            // headers: {
            //    Accept: 'application/vnd.api+json',
            //    'Content-Type': 'application/vnd.api+json',
            // },
         }
      )
         .then((resposne) => resposne.json())
         .then((data) => setNameAnime(data.data));
      // .then((data) => console.log(data.data));
   }, [page, genres]);

   const scrollTop = () => {
      window.scrollTo({ top: 0, behavior: 'smooth' });
   };
   const onClickPrevBtn = () => {
      setPage(page - 10);
      scrollTop();
   };
   const onClickNextBtn = () => {
      setPage(page + 10);
      scrollTop();
   };
   const ascSort = () => {
      const sortedAnime = nameAnime.sort((a, b) =>
         a.attributes.slug > b.attributes.slug
            ? 1
            : a.attributes.slug < b.attributes.slug
            ? -1
            : 0
      );
      setNameAnime([...sortedAnime]);
   };
   const handleChange = (e) => {
      setGenres(e.target.value);
      setPage(0);
   };
   return (
      <main className={styles.mainConteiner}>
         <div>
            {/* <select onChange={setGenresHandler}>
               <option value="">Genre</option>
               <option value="Action">Action</option>
               <option value="Adventure">Adventure</option>
               <option value="Comedy">Comedy</option>
               <option value="Space">Drama</option>
               <option value="Cvi-Fi">Cvi-Fi</option>
               <option value="Space">Space</option>
               <option value="Mystery">Mystery</option>
               <option value="Magic">Magic</option>
               <option value="Supernatural">Supernatural</option>
               <option value="Police">Police</option>
               <option value="Fantasy">Fantasy</option>
               <option value="Sports">Sports</option>
            </select> */}
            <Box sx={{ minWidth: 100 }}>
               <FormControl fullWidth>
                  <InputLabel id="demo-simple-select-label">Genre</InputLabel>
                  <Select
                     labelId="demo-simple-select-label"
                     id="demo-simple-select"
                     value={genres}
                     label="Genres"
                     onChange={handleChange}
                  >
                     <MenuItem value={'Action'}>Action</MenuItem>
                     <MenuItem value={'Adventure'}>Adventure</MenuItem>
                     <MenuItem value={'Comedy'}>Comedy</MenuItem>
                     <MenuItem value={'Drama'}>Drama</MenuItem>
                     <MenuItem value={'Space'}>Space</MenuItem>
                     <MenuItem value={'Mystery'}>Mystery</MenuItem>
                     <MenuItem value={'Magic'}>Magic</MenuItem>
                     <MenuItem value={'Supernatural'}>Supernatural</MenuItem>
                     <MenuItem value={'Police'}>Police</MenuItem>
                     <MenuItem value={'Fantasy'}>Fantasy</MenuItem>
                     <MenuItem value={'Sports'}>Sports</MenuItem>
                     <MenuItem value={'Romance'}>Romance</MenuItem>
                     <MenuItem value={'Cars'}>Cars</MenuItem>
                     <MenuItem value={'Slice of Life'}>Slice of Life </MenuItem>
                     <MenuItem value={'Racing'}>Racing</MenuItem>
                     <MenuItem value={'Horror'}>Horror</MenuItem>
                     <MenuItem value={'Psychological'}>Psychological</MenuItem>
                     <MenuItem value={'Thriller'}>Thriller</MenuItem>
                     <MenuItem value={'Martial Arts'}>Martial Arts</MenuItem>
                     <MenuItem value={'Super Power'}>Super Power</MenuItem>
                     <MenuItem value={'School'}>School</MenuItem>
                     <MenuItem value={'Ecchi'}>Ecchi</MenuItem>
                     <MenuItem value={'Vampire'}>Vampire</MenuItem>
                     <MenuItem value={'Game'}>Game</MenuItem>
                  </Select>
               </FormControl>
            </Box>
            <button onClick={ascSort}>A-Z</button>
         </div>
         <div className={styles.conteinerAnimeList}>
            {nameAnime.map((item) => (
               <div className={styles.contantAnimeList} key={item.id}>
                  <section className={styles.AnimeCard}>
                     <div className={styles.blockNameAnime}>
                        <p className={styles.pNameAnime}>
                           {item.attributes.titles.en === undefined
                              ? item.attributes.titles['en_jp']
                              : item.attributes.titles.en}
                        </p>
                     </div>
                     <div className={styles.partitionDiv}></div>
                     <div className={styles.contentAnimeCard}>
                        <div>
                           <img
                              src={item.attributes.posterImage.small}
                              className={styles.AnimeCoverImage}
                              alt=""
                           />
                        </div>
                        <p className={styles.pTextContent}>
                           <span className={styles.spanTextContent}>
                              Number of series:
                           </span>{' '}
                           {item.attributes.episodeCount === null
                              ? `Episodes are still coming out`
                              : item.attributes.episodeCount}
                        </p>
                        <p className={styles.pTextContent}>
                           <span className={styles.spanTextContent}>
                              Age ratting:
                           </span>{' '}
                           {item.attributes.ageRating}
                        </p>
                        <p className={styles.pTextContent}>
                           <span className={styles.spanTextContent}>Type:</span>{' '}
                           {item.attributes.subtype}
                        </p>
                        <p className={styles.pTextContent}>
                           <span className={styles.spanTextContent}>
                              Average Rating:
                           </span>{' '}
                           {item.attributes.averageRating}
                           {'%'}
                        </p>
                        <p className={styles.pSynopsis}>
                           {item.attributes.synopsis}
                        </p>
                     </div>
                  </section>
               </div>
            ))}
            <div className={styles.divButtonChangePage}>
               <Button
                  sx={{
                     height: '29px',
                     backgroundColor: '#FEB86E',
                     color: '#FF5900',
                     border: 'solid 1px orange',
                     margin: '10px',
                     borderRadius: '12px',
                     position: 'reletive',
                  }}
                  onClick={onClickPrevBtn}
                  disabled={page === 0 ? true : false}
                  variant="contained"
               >
                  <div>
                     <i class="fa-solid fa-chevron-left"></i>
                  </div>{' '}
                  Previous page
               </Button>
               <Button
                  sx={{
                     height: '29px',
                     backgroundColor: '#FEB86E',
                     color: '#FF5900',
                     border: 'solid 1px orange',
                     margin: '10px',
                     borderRadius: '12px',
                     position: 'reletive',
                  }}
                  onClick={onClickNextBtn}
                  variant="contained"
               >
                  Next page{' '}
                  <div>
                     <i class="fa-solid fa-chevron-right arrowSVGButton"></i>
                  </div>
               </Button>
            </div>
         </div>
      </main>
   );
};
